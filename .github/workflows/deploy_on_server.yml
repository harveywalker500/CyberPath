name: Deploy to Server via SFTP

on:
  push:
    branches:
      - deployment

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set Up SSH Configuration
        run: |
          cd ~

          mkdir -p .ssh

          touch .ssh/config

          echo "
          ### NUwebspace
          Host nuwebspace
            User ${{ secrets.SFTP_USER }}
            HostName ${{ secrets.SFTP_HOST }}
            Port 22
            ProxyJump ${{ secrets.SFTP_USER }}@nuwebspace.co.uk
          ###" >> ~/.ssh/config

      - name: Setup SSH Agent and Add Key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SFTP_KEY }}

      - name: Install Expect
        run: |
          sudo apt-get update
          sudo apt-get install -y expect

<<<<<<< HEAD
      - name: Establish SSH Tunnel with Double Password Prompt
=======
      - name: Establish SSH Tunnel
>>>>>>> a43828c (Fixed password issue when uploading)
        env:
          NUWEBSPACE_PASSWORD: ${{ secrets.SFTP_PASSWORD }}
        run: |
          expect << EOF
          spawn ssh -L 2222:localhost:22 nuwebspace
          expect "password:" { send "$env(NUWEBSPACE_PASSWORD)\r" }
          expect "password:" { send "$env(NUWEBSPACE_PASSWORD)\r" }
          interact
          EOF
        background: true # Run in the background to keep the tunnel open

      - name: Establish SSH Tunnel
        env:
          SFTP_HOST: ${{ secrets.SFTP_HOST }}
          SFTP_USER: ${{ secrets.SFTP_USER }}
        run: |
          ssh -L 2222:localhost:22 nuwebspace -N &
          sleep 5 # Wait for the tunnel to establish

      - name: Upload HTML Files via SFTP
        env:
          SFTP_PORT: "2222"
          SFTP_USER: ${{ secrets.SFTP_USER }}
          SFTP_PASSWORD: ${{ secrets.SFTP_PASSWORD }}
        run: |
          expect << EOF
          spawn sftp -o StrictHostKeyChecking=no -P $SFTP_PORT $SFTP_USER@localhost
          expect "password:" { send "$env(SFTP_PASSWORD)\r" }
          expect "sftp>"
          send "put -r * /path/on/your/server\r"
          expect "sftp>"
          send "bye\r"
          EOF
